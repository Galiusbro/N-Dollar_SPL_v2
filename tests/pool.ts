// import { PublicKey } from "@solana/web3.js";

// // –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ç–≤–æ–π —Ç–æ–∫–µ–Ω
// const nDollarMint = new PublicKey(
//   "CFVQG5L1RV6HtVNqTzq43VJVutwUmrFC1FHXFaLhy1Ch"
// );

// // –≠—Ç–æ –∞–¥—Ä–µ—Å –ø—Ä–æ–≥—Ä–∞–º–º—ã LiquidityPool, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ç–æ—Ç –∂–µ, —Å –∫–æ—Ç–æ—Ä—ã–º —Å–æ–∑–¥–∞–≤–∞–ª
// const liquidityPoolProgramId = new PublicKey(
//   "B24yupzEDjF7Z9frnDG16uAwH1ZYfB57kuzh8jwDsL83"
// ); // <-- –≤—Å—Ç–∞–≤—å —Å–≤–æ–π ID!

// // –ù–∞–π—Ç–∏ pool PDA
// const [poolPda] = PublicKey.findProgramAddressSync(
//   [Buffer.from("pool"), nDollarMint.toBuffer()],
//   liquidityPoolProgramId
// );

// console.log("üì¶ Liquidity Pool PDA:", poolPda.toBase58());

// // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ, –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ SOL Vault –∏ N-Dollar ATA:
// const [solVaultPda] = PublicKey.findProgramAddressSync(
//   [Buffer.from("sol_vault"), poolPda.toBuffer()],
//   liquidityPoolProgramId
// );

// console.log("üí∞ SOL Vault PDA:", solVaultPda.toBase58());

// // –ï—Å–ª–∏ –Ω–∞–¥–æ ‚Äî ATA –¥–ª—è –ø—É–ª–∞ (vault) –¥–ª—è N-Dollar:
// import { getAssociatedTokenAddressSync } from "@solana/spl-token";
// const poolNdollarAta = getAssociatedTokenAddressSync(
//   nDollarMint,
//   poolPda,
//   true
// );

// console.log("üéØ Pool N-Dollar ATA:", poolNdollarAta.toBase58());
